using UnityEngine;
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Resolvers
{
    using System;

    public class ThorIL2CPPGeneratedResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new ThorIL2CPPGeneratedResolver();

        private ThorIL2CPPGeneratedResolver()
        {
        }

        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
        {
            return FormatterCache<T>.Formatter;
        }

        private static class FormatterCache<T>
        {
            internal static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

            static FormatterCache()
            {
                var f = ThorIL2CPPGeneratedResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    Formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }

    internal static class ThorIL2CPPGeneratedResolverGetFormatterHelper
    {
        private static readonly global::System.Collections.Generic.Dictionary<Type, int> lookup;

        static ThorIL2CPPGeneratedResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<Type, int>(31)
            {
                { typeof(float[][]), 0 },
                { typeof(global::ColorBounds[]), 1 },
                { typeof(global::ColorId[]), 2 },
                { typeof(global::InventoryObject[]), 3 },
                { typeof(global::JointMetadata[]), 4 },
                { typeof(global::MetadataWrapper[]), 5 },
                { typeof(global::ObjectMetadata[]), 6 },
                { typeof(global::System.Collections.Generic.List<string>), 7 },
                { typeof(global::System.Collections.Generic.List<Vector3>), 8 },
                { typeof(global::ThirdPartyCameraMetadata[]), 9 },
                { typeof(Vector3[]), 10 },
                { typeof(global::AgentMetadata), 11 },
                { typeof(global::ArmMetadata), 12 },
                { typeof(global::AxisAlignedBoundingBox), 13 },
                { typeof(global::ColorBounds), 14 },
                { typeof(global::ColorId), 15 },
                { typeof(global::DroneAgentMetadata), 16 },
                { typeof(global::DroneObjectMetadata), 17 },
                { typeof(global::HandMetadata), 18 },
                { typeof(global::InitializeReturn), 19 },
                { typeof(global::InventoryObject), 20 },
                { typeof(global::JointMetadata), 21 },
                { typeof(global::MetadataPatch), 22 },
                { typeof(global::MetadataWrapper), 23 },
                { typeof(global::MultiAgentMetadata), 24 },
                { typeof(global::ObjectMetadata), 25 },
                { typeof(global::ObjectOrientedBoundingBox), 26 },
                { typeof(global::ObjectPose), 27 },
                { typeof(global::SceneBounds), 28 },
                { typeof(global::SetObjectStates), 29 },
                { typeof(global::ThirdPartyCameraMetadata), 30 },
            };
        }

        internal static object GetFormatter(Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }

            switch (key)
            {
                case 0: return new global::MessagePack.Formatters.ArrayFormatter<float[]>();
                case 1: return new global::MessagePack.Formatters.ArrayFormatter<global::ColorBounds>();
                case 2: return new global::MessagePack.Formatters.ArrayFormatter<global::ColorId>();
                case 3: return new global::MessagePack.Formatters.ArrayFormatter<global::InventoryObject>();
                case 4: return new global::MessagePack.Formatters.ArrayFormatter<global::JointMetadata>();
                case 5: return new global::MessagePack.Formatters.ArrayFormatter<global::MetadataWrapper>();
                case 6: return new global::MessagePack.Formatters.ArrayFormatter<global::ObjectMetadata>();
                case 7: return new global::MessagePack.Formatters.ListFormatter<string>();
                case 8: return new global::MessagePack.Formatters.ListFormatter<Vector3>();
                case 9: return new global::MessagePack.Formatters.ArrayFormatter<global::ThirdPartyCameraMetadata>();
                case 10: return new global::MessagePack.Formatters.ArrayFormatter<Vector3>();
                case 11: return new MessagePack.Formatters.AgentMetadataFormatter();
                case 12: return new MessagePack.Formatters.ArmMetadataFormatter();
                case 13: return new MessagePack.Formatters.AxisAlignedBoundingBoxFormatter();
                case 14: return new MessagePack.Formatters.ColorBoundsFormatter();
                case 15: return new MessagePack.Formatters.ColorIdFormatter();
                case 16: return new MessagePack.Formatters.DroneAgentMetadataFormatter();
                case 17: return new MessagePack.Formatters.DroneObjectMetadataFormatter();
                case 18: return new MessagePack.Formatters.HandMetadataFormatter();
                case 19: return new MessagePack.Formatters.InitializeReturnFormatter();
                case 20: return new MessagePack.Formatters.InventoryObjectFormatter();
                case 21: return new MessagePack.Formatters.JointMetadataFormatter();
                case 22: return new MessagePack.Formatters.MetadataPatchFormatter();
                case 23: return new MessagePack.Formatters.MetadataWrapperFormatter();
                case 24: return new MessagePack.Formatters.MultiAgentMetadataFormatter();
                case 25: return new MessagePack.Formatters.ObjectMetadataFormatter();
                case 26: return new MessagePack.Formatters.ObjectOrientedBoundingBoxFormatter();
                case 27: return new MessagePack.Formatters.ObjectPoseFormatter();
                case 28: return new MessagePack.Formatters.SceneBoundsFormatter();
                case 29: return new MessagePack.Formatters.SetObjectStatesFormatter();
                case 30: return new MessagePack.Formatters.ThirdPartyCameraMetadataFormatter();
                default: return null;
            }
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1649 // File name should match first type name
